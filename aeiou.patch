diff --git a/src/logger.rs b/src/logger.rs
index 5f80912..d154600 100644
--- a/src/logger.rs
+++ b/src/logger.rs
@@ -24,13 +24,25 @@ impl From<LogStyle> for String {
 }
 
 pub(crate) fn log_msg<const N: usize>(colors: [LogStyle; N], prefix: &str, message: String) {
-    println!(
-        "[{}{prefix:15}\x1b[m] {message}",
-        colors
-            .iter()
-            .map(|x| Into::<String>::into(*x))
-            .collect::<String>()
-    );
+    
+    let lines: Vec<_> = message.lines().collect();
+    if let Some((&first, rest)) = lines.split_first() {
+        println!(
+            "[{}{prefix:15}\x1b[m] {first}",
+            colors
+                .iter()
+                .map(|x| Into::<String>::into(*x))
+                .collect::<String>()
+        );
+
+        for &line in rest {
+            println!(
+                "{}---------------->\x1b[m {line}",
+                LogStyle::Grey,
+            );
+        }
+    }
+
 }
 
 #[macro_export]
diff --git a/src/main.rs b/src/main.rs
index ee04d5c..1f1b3f2 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -1,11 +1,8 @@
-use logger::LogStyle;
-use logger::log_msg;
+use logger::{log_msg, LogStyle};
 
 mod logger;
 
 #[tokio::main]
 async fn main() {
-    log!([LogStyle::Bold, LogStyle::Italic], "DUPA", "{}", "aeiou");
-    
-    println!("Hello, world!");
+    log!([LogStyle::Bold, LogStyle::Italic], "test", "{}\n{}\n{}", "test1", "test2", "test3\ntest4");
 }
